{"version":3,"sources":["services/api_handler.js","components/applicationForm.js","img/eye_0_post.png","components/mascot.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["sendData","params","onResponse","console","log","axios","get","then","response","status","catch","error","TextInput","type","label","labelText","value","onChange","placeholder","invalid","invalidText","className","id","htmlFor","TextAreaInput","ApplicationForm","useState","fullName","setFullName","fullNameValid","setFullNameValid","checkFullName","email","setEmail","emailValid","setEmailValid","checkEmail","test","funFact","setFunFact","funFactValid","setFunFactValid","onSubmit","e","preventDefault","name","funfact","data","alert","noValidate","event","target","style","float","Mascot","src","mascot","alt","Home","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9ea4af6.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst _API_URL = \"https://hack-uci-test-endpoint.herokuapp.com/test\";\n\n\n// send form values as GET request to postman-echo server\nconst sendData = (params, onResponse) => {\n  console.log(\"sending form data\")\n  axios.get(_API_URL, {\n    params: params\n  }).then(function (response) {\n    // if valid response received\n    if (response.status === 200) {\n      onResponse(response);\n    } else if (response.status === 400) {\n      console.log(\"Server returned 400: invalid query\");\n    }\n  }).catch(function (error) {\n    console.log(\"Could not connect to API server\");\n  }).then(function () {\n    // default action\n  });\n}\n\nexport default sendData;\n","import React, { useState } from 'react';\nimport sendData from \"../services/api_handler\";\nimport \"./form-input.css\";\nimport \"./floating-labels.css\";\nimport \"./applicationForm.css\";\n\n\nconst ApplicationForm = () => {\n  const [fullName, setFullName] = useState(\"\");\n  const [fullNameValid, setFullNameValid] = useState(null);\n  const checkFullName = (value) => value !== \"\";\n\n  const [email, setEmail] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(null);\n  // based on RFC 3696 standard\n  const checkEmail = (value) => /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)+$/.test(value);\n\n  const [funFact, setFunFact] = useState(\"\");\n  const [funFactValid, setFunFactValid] = useState(null);\n  const checkFunFact = (value) => value !== \"\";\n\n\n  const handleSuccess = (data) => {\n    console.log(data);\n    // show an alert for now\n    alert(\"your form was successfully submitted\");\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (fullNameValid && emailValid && funFactValid) {\n      // perform GET request to postman-echo api\n      sendData({\n        name: fullName,\n        email: email,\n        funfact: funFact\n      }, (response) => {\n        handleSuccess(response.data);\n        // clear form values\n        setFullName(\"\");\n        setEmail(\"\");\n        setFunFact(\"\");\n      });\n    } else {\n      // display appropriate invalid text\n      setFullNameValid(checkFullName(fullName));\n      setEmailValid(checkEmail(email));\n      setFunFactValid(checkFullName(funFact));\n    }\n  };\n\n  return (\n    <div className=\"application-form\">\n      <h2>Hack UCI Application</h2>\n\n      <form onSubmit={handleSubmit} noValidate>\n\n        <TextInput\n          type=\"text\"\n          label=\"fullName\"\n          labelText=\"Name\"\n          value={fullName}\n          onChange={(event) => {\n            setFullName(event.target.value);\n            setFullNameValid(checkFullName(event.target.value));\n          }}\n          placeholder=\"Name\"\n          invalid={fullNameValid === false}\n          invalidText=\"Please enter a name.\"\n        />\n\n        <TextInput\n          type=\"email\"\n          label=\"email\"\n          labelText=\"Email\"\n          value={email}\n          onChange={(event) => {\n            setEmail(event.target.value);\n            setEmailValid(checkEmail(event.target.value));\n          }}\n          placeholder=\"Email\"\n          invalid={emailValid === false}\n          invalidText=\"Please enter a valid email address.\"\n        />\n\n        <TextAreaInput\n          label=\"funFact\"\n          labelText=\"Fun Fact\"\n          value={funFact}\n          onChange={(event) => {\n            setFunFact(event.target.value);\n            setFunFactValid(checkFunFact(event.target.value));\n          }}\n          placeholder=\"Fun Fact\"\n          invalid={funFactValid === false}\n          invalidText=\"Please enter a fun fact.\"\n        />\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-submit\"\n          style={{float: \"right\"}}\n        >\n          Submit\n        </button>\n\n      </form>\n    </div>\n  );\n};\n\nconst TextInput = ({ type, label, labelText, value, onChange, placeholder, invalid, invalidText }) => {\n  return (\n    <div className=\"form-label-group\">\n      <input\n        type={type}\n        id={label}\n        className={`form-control${invalid ? ' is-invalid' : ''}`}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n      />\n      <label htmlFor={label}>{labelText}</label>\n      <div className=\"invalid-feedback\">\n        {invalidText}\n      </div>\n    </div>\n  )\n};\n\nconst TextAreaInput = ({ label, labelText, value, onChange, placeholder, invalid, invalidText }) => {\n  return (\n    <div className=\"form-label-group\">\n      <textarea\n        id={label}\n        className={`form-control${invalid ? ' is-invalid' : ''}`}\n        value={value}\n        onChange={onChange}\n        placeholder={placeholder}\n      />\n      <label htmlFor={label}>{labelText}</label>\n      <div className=\"invalid-feedback\">\n        {invalidText}\n      </div>\n    </div>\n  )\n};\n\nexport default ApplicationForm;\n","export default __webpack_public_path__ + \"static/media/eye_0_post.8955faad.png\";","import React, { useState } from 'react';\nimport \"./mascot.css\";\nimport mascot from \"../img/eye_0_post.png\"\n\nconst mascotAlt = \"hand drawing of eye, complete with brow and lashes\";\n\n\nconst Mascot = () => {\n  return (\n    <div className=\"mascot\">\n      <img\n        src={mascot}\n        alt={mascotAlt}\n        className=\"img-fluid\"\n      />\n    </div>\n  );\n};\n\nexport default Mascot;\n","import React from 'react';\nimport ApplicationForm from \"../components/applicationForm\";\nimport Mascot from \"../components/mascot\";\n\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <ApplicationForm />\n      <Mascot />\n    </div>\n  );\n}\n\nexport default Home;\n","import './App.css';\nimport Home from \"./pages/home\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}